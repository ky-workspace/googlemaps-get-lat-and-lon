// Generated by CoffeeScript 1.3.3
(function() {

  $.googleMaps = function() {
    this.OPTION = {
      ad: '',
      ido: '',
      keido: '',
      markerDrag: true,
      markerRetun: '',
      collback: function() {
        return false;
      }
    };
    this.APIOPTION = {
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      scaleControl: true,
      mapTypeControl: false,
      scrollwheel: false
    };
    this.GLOBAL = {
      map: "",
      marker: ""
    };
    return this;
  };

  $.googleMaps.prototype = {
    _extends: function(option, apiOption) {
      this.OPTION = $.extend(this.OPTION, option);
      return this.APIOPTION = $.extend(this.APIOPTION, apiOption);
    },
    _mapCreate: function(domObj) {
      var self;
      self = this;
      $.when(this._mapLatLngObject(this.OPTION.ido, this.OPTION.keido)).always(function(ido, keido) {
        self.APIOPTION.center = new google.maps.LatLng(ido, keido);
        self.OPTION.collback(ido, keido);
        self.GLOBAL.map = new google.maps.Map(domObj.get(0), self.APIOPTION);
        self._markerCreate(self.APIOPTION.center);
        self._markerRetun();
        return this;
      });
      return this;
    },
    _markerCreate: function(latlng) {
      var markerOption, self;
      markerOption = {
        'position': latlng,
        'map': this.GLOBAL.map,
        'draggable': this.OPTION.markerDrag
      };
      this.GLOBAL.marker = new google.maps.Marker(markerOption);
      self = this;
      return google.maps.event.addListener(this.GLOBAL.marker, 'dragend', function() {
        var position;
        position = self.GLOBAL.marker.position;
        self.GLOBAL.map.setCenter(position);
        return self.OPTION.collback(position.lat(), position.lng());
      });
    },
    _mapLatLngObject: function(ido, keido) {
      var $def, geocoder, self;
      $def = $.Deferred();
      self = this;
      if (ido === '' || keido === '') {
        geocoder = new google.maps.Geocoder();
        geocoder.geocode({
          address: self.OPTION.ad
        }, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            return $def.resolve(results[0].geometry.location.lat(), results[0].geometry.location.lng());
          } else {
            return $def.reject(35.6894875, 139.69170639999993);
          }
        });
      } else {
        $def.resolve(ido, keido);
      }
      return $def.promise();
    },
    _markerRetun: function() {
      var self;
      self = this;
      if (this.OPTION.markerRetun !== "") {
        return $(this.OPTION.markerRetun).click(function() {
          var position;
          position = self.GLOBAL.marker.position;
          return self.GLOBAL.map.setCenter(position);
        });
      }
    }
  };

  $.fn.googleMaps = function(option, apiOption) {
    var instance;
    if ($(this).size() > 0) {
      instance = new $.googleMaps();
      instance._extends(option, apiOption);
      return instance._mapCreate(this);
    }
  };

}).call(this);
